import asyncio
import os
import datetime
import pytz

from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from apscheduler.schedulers.asyncio import AsyncIOScheduler

TOKEN = os.environ.get('TELEGRAM_TOKEN')
TIMEZONE = pytz.timezone("Europe/Moscow")

# Расписание: для каждого чата - список дней недели и время
SCHEDULE = [
    {"chat_id": -1002854381464, "days": ["tue","fri"], "time": "10:00"},  # 7-9
    {"chat_id": -4554489448, "days": ["tue","thu"], "time": "10:00"},  # 3-4
    {"chat_id": -1002318561176, "days": ["mon","thu"], "time": "10:00"},  # 10-13 понедельник 19:30, а четверг 19:10
    {"chat_id": -4546245490, "days": ["mon","wed"], "time": "10:00"},  # 5-6 понедельник 18:20, а среда 18:00
    {"chat_id": -1002446646594, "days": ["wed","fri"], "time": "10:00"}  # 14-17 пятница 17:30, а среда 19:10
]

# Сообщения для каждого чата: четная и нечетная неделя по дням
# Сообщения по схеме: MESSAGES[chat_id][weekday][odd/even]
MESSAGES = {
    -4510188920: {
        "tue": {"even": "Добрый день, уважаемые родители 🌸\nСегодня состоится занятие по хип-хопу в 19:10.\n\nФорма одежды:\n\n🍀Штаны или лосины.\n🍀Футболка.\n🍀Кроссовки.\n\nНапишите, пожалуйста, кто будет сегодня? 🌷",
            "odd":  "Добрый день, уважаемые родители 🌸\nСегодня состоится занятие по контемпорари в 19:10.\n\nФорма одежды:\n\n🍀Штаны или лосины.\n🍀Кофта с длинным рукавом.\n🍀Носочки.\n\nНапишите, пожалуйста, кто будет сегодня? 🌷"},
        "fri": {
            "even": "Добрый день, уважаемые родители 🌸\nСегодня состоится занятие по хип-хопу в 19:10.\n\nФорма одежды:\n\n🍀Штаны или лосины.\n🍀Футболка.\n🍀Кроссовки.\n\nНапишите, пожалуйста, кто будет сегодня? 🌷",
            "odd": "Добрый день, уважаемые родители 🌸\nСегодня состоится занятие по контемпорари в 19:10.\n\n🍀Штаны или лосины.\n🍀Кофта с длинным рукавом.\n🍀Носочки.\n\nНапишите, пожалуйста, кто будет сегодня? 🌷"}
    },
    -4554489448: {
        "tue": {"even": "Добрый день, уважаемые родители 🌸\nСегодня состоится занятие в 18:00.\n\nФорма одежды:\n\n🍀Штаны или лосины.\n🍀Футболка.\n🍀Балетки.\n\nНапишите, пожалуйста, кто будет сегодня? 🌷",
            "odd":  "Добрый день, уважаемые родители 🌸\nСегодня состоится занятие в 18:00.\n\nФорма одежды:\n\n🍀Штаны или лосины.\n🍀Футболка.\n🍀Балетки.\n\nНапишите, пожалуйста, кто будет сегодня? 🌷"},
        "thu": {
            "even": "Добрый день, уважаемые родители 🌸\nСегодня состоится занятие в 18:00.\n\nФорма одежды:\n\n🍀Штаны или лосины.\n🍀Футболка.\n🍀Балетки.\n\nНапишите, пожалуйста, кто будет сегодня? 🌷",
            "odd": "Добрый день, уважаемые родители 🌸\nСегодня состоится занятие в 18:00.\n\nФорма одежды:\n\n🍀Штаны или лосины.\n🍀Футболка.\n🍀Балетки.\n\nНапишите, пожалуйста, кто будет сегодня? 🌷"}
    },
    -1002318561176: {
        "mon": {"even": "Добрый день, уважаемые родители 🤗💜\nСегодня состоится занятие по хип-хопу в 19:30.\n\nФорма одежды:\n\n🍀Штаны или лосины.\n🍀Футболка.\n🍀Кроссовки.\n\nНапишите, пожалуйста, кто будет сегодня? 🌷",
            "odd":  "Добрый день, уважаемые родители 🤗💜\nСегодня состоится занятие по контемпорари в 19:30.\n\n🍀Штаны или лосины.\n🍀Кофта с длинным рукавом.\n🍀Носочки.\n\nНапишите, пожалуйста, кто будет сегодня? 🌷"},
        "thu": {
            "even": "Добрый день, уважаемые родители 🤗💜\nСегодня состоится занятие по хип-хопу в 19:10.\n\nФорма одежды:\n\n🍀Штаны или лосины.\n🍀Футболка.\n🍀Кроссовки.\n\nНапишите, пожалуйста, кто будет сегодня? 🌷",
            "odd": "Добрый день, уважаемые родители 🤗💜\nСегодня состоится занятие по контемпорари в 19:10.\n\n🍀Штаны или лосины.\n🍀Кофта с длинным рукавом.\n🍀Носочки.\n\nНапишите, пожалуйста, кто будет сегодня? 🌷"},
    },
    -4546245490: {
        "mon": {"even": "Добрый день, уважаемые родители 🤗💜\nСегодня состоится занятие по хип-хопу в 18:20.\n\nФорма одежды:\n\n🍀Штаны или лосины.\n🍀Футболка.\n🍀Кроссовки.\n\nНапишите, пожалуйста, кто будет сегодня? 🌷",
            "odd":  "Добрый день, уважаемые родители 🤗💜\nСегодня состоится занятие по контемпорари в 18:20.\n\n🍀Штаны или лосины.\n🍀Кофта с длинным рукавом.\n🍀Носочки.\n\nНапишите, пожалуйста, кто будет сегодня? 🌷"},
        "wed": {
            "even": "Добрый день, уважаемые родители 🤗💜\nСегодня состоится занятие по хип-хопу в 18:00.\n\nФорма одежды:\n\n🍀Штаны или лосины.\n🍀Футболка.\n🍀Кроссовки.\n\nНапишите, пожалуйста, кто будет сегодня? 🌷",
            "odd": "Добрый день, уважаемые родители 🤗💜\nСегодня состоится занятие по контемпорари в 18:00.\n\n🍀Штаны или лосины.\n🍀Кофта с длинным рукавом.\n🍀Носочки.\n\nНапишите, пожалуйста, кто будет сегодня? 🌷"},
    },
    -1002446646594: {
        "wed": {"even": "Добрый день, уважаемые родители 🤗💜\nСегодня состоится занятие по хип-хопу в 19:10.\n\nФорма одежды:\n\n🍀Штаны или лосины.\n🍀Футболка.\n🍀Кроссовки.\n\nНапишите, пожалуйста, кто будет сегодня? 🌷",
            "odd":  "Добрый день, уважаемые родители 🤗💜\nСегодня состоится занятие по контемпорари в 19:10.\n\n🍀Штаны или лосины.\n🍀Кофта с длинным рукавом.\n🍀Носочки.\n\nНапишите, пожалуйста, кто будет сегодня? 🌷"},
        "fri": {
            "even": "Добрый день, уважаемые родители 🤗💜\nСегодня состоится занятие по хип-хопу в 17:30.\n\nФорма одежды:\n\n🍀Штаны или лосины.\n🍀Футболка.\n🍀Кроссовки.\n\nНапишите, пожалуйста, кто будет сегодня? 🌷",
            "odd": "Добрый день, уважаемые родители 🤗💜\nСегодня состоится занятие по контемпорари в 17:30.\n\n🍀Штаны или лосины.\n🍀Кофта с длинным рукавом.\n🍀Носочки.\n\nНапишите, пожалуйста, кто будет сегодня? 🌷"},
    }
}

# HOLIDAYS = {
#     "2025-01-01", "2025-01-07", "2025-02-23", "2025-03-08",
#     "2025-05-01", "2025-05-09", "2025-06-12"
# }

bot = Bot(
    token=TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
# dp = Dispatcher()
scheduler = AsyncIOScheduler(timezone=TIMEZONE)

async def send_dynamic_message(chat_id: int, weekday: str):
    week_num = datetime.datetime.now(TIMEZONE).isocalendar()[1]
    # now = datetime.datetime.now(TIMEZONE)
    # today_str = now.strftime("%Y-%m-%d")
    # if today_str in HOLIDAYS:
    #     print(f"Сегодня {today_str} — праздничный день, рассылка отменена для чата {chat_id}.")
    #     return
    # week_num = now.isocalendar()[1]
    kind = "even" if week_num % 2 == 0 else "odd"
    msg = MESSAGES.get(chat_id, {}).get(weekday, {}).get(kind, "Сообщение не задано.")
    try:
        await bot.send_message(chat_id=chat_id, text=msg)
        print(f"В {chat_id}, {weekday}: {msg}")
    except Exception as e:
        print(f"Ошибка для {chat_id}, {weekday}: {e}")

def schedule_jobs():
    # jobs_set = set() # Проверка на создание дублирующихся заданий
    for sched in SCHEDULE:
        hour, minute = map(int, sched["time"].split(":"))
        for weekday in sched["days"]:
            # job_key = (sched["chat_id"], weekday, sched["time"])
            # if job_key not in jobs_set:
                scheduler.add_job(
                    send_dynamic_message,
                    "cron",
                    args=[sched["chat_id"], weekday],
                    day_of_week=weekday,
                    hour=hour,
                    minute=minute,
                )
                # jobs_set.add(job_key)

async def main():
    schedule_jobs()
    scheduler.start()
    # print("Aiogram-бот работает с рассылкой по расписанию (дни недели, четность недели)!")
    # await dp.start_polling(bot)
    print("Бот работает ТОЛЬКО как рассыльщик (без polling и команд).")
    while True:
        await asyncio.sleep(3600)

if __name__ == "__main__":
    asyncio.run(main())